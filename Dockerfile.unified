# Unified Chimera Trading System with IBKR Gateway
# Production-ready container with real IBKR data integration

FROM ubuntu:22.04

# Prevent interactive prompts during installation
ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=America/New_York

# Install system dependencies
RUN apt-get update && apt-get install -y \
    # Java for IBKR Gateway
    openjdk-11-jdk \
    # GUI support for IBKR Gateway
    xvfb \
    x11vnc \
    fluxbox \
    # Python and Node.js
    python3.11 \
    python3-pip \
    nodejs \
    npm \
    # System utilities
    curl \
    wget \
    unzip \
    git \
    supervisor \
    nginx \
    # Networking tools
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# Set up working directory
WORKDIR /app

# Copy IBKR Gateway files
COPY ibkr-gateway/ /app/ibkr-gateway/
COPY ibkr-gateway/ibgateway-latest-standalone-linux-x64.sh /tmp/

# Install IBKR Gateway
RUN chmod +x /tmp/ibgateway-latest-standalone-linux-x64.sh && \
    /tmp/ibgateway-latest-standalone-linux-x64.sh -q -dir /app/IBGateway && \
    rm /tmp/ibgateway-latest-standalone-linux-x64.sh

# Download and install IBC (Interactive Brokers Controller)
RUN wget -q https://github.com/IbcAlpha/IBC/releases/download/3.22.0/IBCLinux-3.22.0.zip -O /tmp/ibc.zip && \
    unzip -q /tmp/ibc.zip -d /app/IBC && \
    chmod +x /app/IBC/*.sh && \
    rm /tmp/ibc.zip

# Copy Chimera Trading System
COPY . /app/chimera/
WORKDIR /app/chimera

# Install Python dependencies
RUN pip3 install --no-cache-dir -r requirements.txt

# Install Node.js dependencies for frontend
WORKDIR /app/chimera/dashboard_frontend
RUN npm install

# Build frontend for production
RUN npm run build

# Install backend dependencies
WORKDIR /app/chimera/dashboard_api
RUN pip3 install --no-cache-dir -r requirements.txt

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Copy built frontend to nginx directory
RUN cp -r /app/chimera/dashboard_frontend/dist/* /usr/share/nginx/html/

# Create supervisor configuration
RUN mkdir -p /etc/supervisor/conf.d
COPY <<EOF /etc/supervisor/conf.d/supervisord.conf
[supervisord]
nodaemon=true
user=root

[program:xvfb]
command=/usr/bin/Xvfb :99 -screen 0 1024x768x24
autorestart=true
priority=100

[program:vnc]
command=/usr/bin/x11vnc -display :99 -nopw -listen localhost -xkb -ncache 10 -ncache_cr -forever
autorestart=true
priority=200

[program:ibgateway]
command=/app/ibkr-gateway/scripts/start-with-ibc.sh
environment=DISPLAY=":99",TWS_MAJOR_VRSN="10",TWS_PATH="/app/IBGateway",IBC_INI="/app/ibkr-gateway/ibc-config/config.ini",IBC_PATH="/app/IBC"
autorestart=true
priority=300
user=root

[program:chimera_api]
command=python3 src/main.py
directory=/app/chimera/dashboard_api
environment=PYTHONPATH="/app/chimera"
autorestart=true
priority=400

[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
autorestart=true
priority=500
EOF

# Create environment file with real IBKR configuration
COPY <<EOF /app/chimera/.env
# IBKR Gateway Configuration (NO SIMULATIONS)
DATA_SOURCE=ibkr
IBKR_HOST=127.0.0.1
IBKR_PORT=4002
IBKR_CLIENT_ID=1
IBKR_READONLY=false

# IBKR Credentials
TWS_USERID=isht1430
TWS_PASSWORD=Gamma@1430Nav9464
TRADING_MODE=paper
ACCOUNT_CODE=DU2838017

# Trading Configuration
TRADING_SYMBOLS=AAPL,MSFT,GOOGL,AMZN,TSLA,NVDA,META,SPY,QQQ
MAX_POSITION_SIZE=1000
MAX_PORTFOLIO_RISK=0.02
STOP_LOSS_PCT=0.015
TAKE_PROFIT_RATIO=2.0

# System Configuration
LOG_LEVEL=INFO
DATABASE_PATH=/app/chimera/data/db/chimera_trading.db
API_HOST=0.0.0.0
API_PORT=5000
FRONTEND_PORT=80
EOF

# Create startup script
COPY <<EOF /app/start.sh
#!/bin/bash
set -e

echo "Starting Unified Chimera Trading System with IBKR Gateway..."

# Create necessary directories
mkdir -p /app/chimera/data/db
mkdir -p /app/chimera/logs

# Wait for IBKR Gateway to be ready
echo "Waiting for IBKR Gateway to start..."
timeout=300
while [ \$timeout -gt 0 ]; do
    if netstat -tlnp 2>/dev/null | grep ":4002"; then
        echo "‚úÖ IBKR Gateway API is ready on port 4002"
        break
    fi
    sleep 2
    timeout=\$((timeout-2))
done

if [ \$timeout -le 0 ]; then
    echo "‚ùå IBKR Gateway failed to start within 5 minutes"
    exit 1
fi

echo "‚úÖ All services started successfully"
echo "üåê Dashboard: http://localhost"
echo "üîå API: http://localhost/api"
echo "üì∫ VNC: localhost:5900 (for Gateway GUI access)"

# Keep container running
tail -f /dev/null
EOF

RUN chmod +x /app/start.sh

# Expose ports
EXPOSE 80 5900 4002

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost/health || exit 1

# Set working directory
WORKDIR /app

# Start all services
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]

